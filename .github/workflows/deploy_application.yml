name: Deploy Application

on:
  push:
    branches:
      - main
    paths:
      - "app/**"
  workflow_dispatch:

jobs:
  Bootstrap:
    name: Deploy Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository 📦
        uses: actions/checkout@v3

      - name: Configure AWS Credentials 🔑
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform 🏗
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.1.2
          terraform_wrapper: false # Necessary to access output

      - name: Terraform Init ✨
        id: init
        run: terraform init -upgrade
        working-directory: ./terraform

      - name: Save Lambda function name to Environment Variables 💾
        run: echo "LAMBDA_FUNCTION_NAME=$(terraform output -raw lambda_function)" >> $GITHUB_ENV
        working-directory: ./terraform

      - name: Save ECR name to Environment Variables 🛟
        run: echo "ECR_NAME=$(terraform output -raw ecr_repository_name)" >> $GITHUB_ENV
        working-directory: ./terraform

      - name: Setup Node 🏗
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Login to Amazon ECR 🧑‍💻
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR 🏷
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
        working-directory: ./app

      - name: Deploy Lambda Function 🚀
        env:
          LAMBDA_FUNCTION_NAME: ${{ env.LAMBDA_FUNCTION_NAME }}
        run: aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --image-uri $IMAGE_URI
        working-directory: ./app
